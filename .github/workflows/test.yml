name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  CI: true
  RUSTFLAGS: -D warnings

jobs:
  # Fast linting - no dependencies, runs immediately
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (stable + components)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  # Fast build check - no dependencies, runs immediately
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Build project
        run: cargo build --all-features

  # Unit tests - no database needed, runs immediately
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Run unit tests
        run: cargo test --workspace --lib --all-features

  # Integration tests - needs database, runs in parallel with other jobs
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: pocketpair
        options: >-
          --health-cmd "pg_isready -U postgres -d pocketpair"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          psql --version

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres -d pocketpair && break
            sleep 1
          done

      - name: Install sqlx-cli (pinned)
        run: cargo install --locked sqlx-cli@0.7.4 --no-default-features --features rustls,postgres

      - name: Run migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/pocketpair
        run: sqlx migrate run

      - name: Seed database (fail on any error)
        env:
          PGPASSWORD: postgres
        run: psql -v ON_ERROR_STOP=1 -f scripts/seed.sql postgres://postgres:postgres@localhost:5432/pocketpair

      - name: Run integration tests
        env:
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/pocketpair
        run: cargo test --workspace --test '*' --all-features -- --nocapture