# ---- build stage -------------------------------------------------------------
FROM rust:1.89-alpine3.22 AS builder
WORKDIR /app

# Tools for musl builds + strip
RUN apk add --no-cache build-base musl-dev pkgconfig binutils

# Build in offline mode (no DB needed)
ENV SQLX_OFFLINE=true \
    CARGO_TERM_COLOR=always

# (Optional) cache-friendly deps bootstrap
COPY Cargo.toml Cargo.lock ./
COPY crates/api/Cargo.toml crates/api/Cargo.toml
RUN cargo fetch --locked

# Now sources
COPY crates ./crates
COPY config ./config
COPY migrations ./migrations

# Build (locked for reproducibility)
# Use BuildKit caches for big speedups on rebuilds
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/app/target \
    cargo build --release --locked --bin api \
 && strip target/release/api

# ---- runtime stage -----------------------------------------------------------
FROM alpine:3.22
WORKDIR /usr/local/bin

# TLS roots + lightweight init (optional but recommended for signal handling)
RUN apk add --no-cache ca-certificates tzdata dumb-init \
 && adduser -S -u 10001 appuser

COPY --from=builder /app/target/release/api /usr/local/bin/api

USER 10001
EXPOSE 8080
ENV RUST_LOG=info

# Healthcheck (optional)
# HEALTHCHECK --interval=30s --timeout=3s --retries=3 CMD wget -qO- http://127.0.0.1:8080/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["api"]