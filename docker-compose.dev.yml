services:
  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    environment:
      DATABASE_URL: postgres://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_DB}
    volumes:
      - ./migrations:/migrations:ro
    command: [ "migrate", "run", "--source", "/migrations" ]
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pocketpair-net
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgres://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_DB}
      RUST_LOG: ${RUST_LOG:-info}
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./:/app:rw
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - target-dir:/app/target
    depends_on:
      migrator:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    networks:
      - pocketpair-net
    restart: unless-stopped
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${PG_DB:-pocketpair}
      POSTGRES_USER: ${PG_USER:-pocketpair}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-pocketpair}
    ports:
      - "6432:5432"
    # Bind mount so data sits in ./db_data on my host
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pocketpair-net

networks:
  pocketpair-net:
    driver: bridge

volumes:
  cargo-registry:
  cargo-git:
  target-dir: